# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Book {
  _id: ObjectId!
  title: String!
  author: String!
}

input BookInput {
  title: String!
  author: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Maker {
  _id: ObjectId!
  title: String!
  current: Boolean!
  createdAt: DateTime!
  makerType: MakerType!
  tasks: [MakerTask!]!
}

input MakerInput {
  transactionTime: DateTime!
  title: String!
  makerType: MakerType!
  tasks: [ObjectId!]
}

type MakerRecord {
  _id: ObjectId!
  date: DateTime!
  maker: Maker!
  makerType: MakerType!
  checks: [Boolean!]!
}

input MakerRecordInput {
  date: DateTime!
  maker: ObjectId!
  makerType: String!
}

type MakerTask {
  _id: ObjectId!
  title: String!
  comment: String
}

input MakerTaskInput {
  title: String!
  comment: String
}

"""Type of Maker"""
enum MakerType {
  DAILY
  WEEKLY
  MONTHLU
  QUARTERLY
  YEARLY
  CENTURILY
}

type MoneyTransaction {
  _id: ObjectId!
  transactionTime: DateTime!
  flowType: String!
  amount: Float!
  unit: String!
  from: String!
  to: String!
}

input MoneyTransactionInput {
  transactionTime: DateTime!
  flowType: String!
  amount: Float!
  from: String!
  to: String!
}

type Mutation {
  addBook(book: BookInput!): Book!
  updateBook(bookId: ObjectId!, book: BookInput!): Book
  deleteBook(bookId: ObjectId!): Book
  addMakerRecord(makerRecord: MakerRecordInput!): MakerRecord!
  updateMakerRecord(makerRecordId: ObjectId!, makerRecord: MakerRecordInput!): MakerRecord
  deleteMakerRecord(makerRecordId: ObjectId!): MakerRecord
  addMakerTask(makerTask: MakerTaskInput!): MakerTask!
  updateMakerTask(makerTaskId: ObjectId!, makerTask: MakerTaskInput!): MakerTask
  deleteMakerTask(makerTaskId: ObjectId!): MakerTask
  addMaker(maker: MakerInput!): Maker!
  updateMaker(makerId: ObjectId!, maker: MakerInput!): Maker
  deleteMaker(makerId: ObjectId!): Maker
  addMoneyTransaction(moneyTransaction: MoneyTransactionInput!): MoneyTransaction!
  updateMoneyTransaction(moneyTransactionId: ObjectId!, moneyTransaction: MoneyTransactionInput!): MoneyTransaction
  deleteMoneyTransaction(moneyTransactionId: ObjectId!): MoneyTransaction
  addWishProduct(WishProduct: WishProductInput!): WishProduct!
  updateWishProduct(WishProductId: ObjectId!, WishProduct: WishProductInput!): WishProduct
  deleteWishProduct(WishProductId: ObjectId!): WishProduct
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
  booksByBookFilter: [Book!]!
  bookById(bookId: ObjectId!): Book
  makerRecordsByFilter: [MakerRecord!]!
  makerRecordById(makerRecordId: ObjectId!): MakerRecord
  makerTasksByFilter: [MakerTask!]!
  makerTaskById(makerTaskId: ObjectId!): MakerTask
  makersByMakerFilter: [Maker!]!
  makerById(makerId: ObjectId!): Maker
  moneyTransactionsByMoneyTransactionFilter: [MoneyTransaction!]!
  moneyTransactionById(moneyTransactionId: ObjectId!): MoneyTransaction
  WishProductsByWishProductFilter: [WishProduct!]!
  WishProductById(WishProductId: ObjectId!): WishProduct
}

type WishProduct {
  _id: ObjectId!
  createdAt: DateTime!
  deletedAt: DateTime!
  boughtAt: DateTime!
  title: String
  link: String
  money: Float
  unit: String!
}

input WishProductInput {
  title: String!
  link: String!
  amount: Float!
  unit: String!
}
